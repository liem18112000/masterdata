{
  "openapi": "3.0.1",
  "info": {
    "title": "Payment Service",
    "description": "The Payment Service is an Experience Service that allows the Users and Applications on the Platform to make Payments using many different Payment channels & instruments including Domestic Payment Networks (Bank Transfers), Open Banking rails, Credit Cards, Direct Debits etc. The Payment Service integrates with Domain specific payment services such as Interbank Payment Service to execute Payments using external Payments processors.",
    "version": "3.1.6"
  },
  "servers": [
    {
      "url": "http://localhost:4477",
      "description": "Generated server url"
    }
  ],
  "tags": [
    {
      "name": "Domestic Payments",
      "description": "Manage Domestic Payments"
    }
  ],
  "paths": {
    "/payments": {
      "post": {
        "tags": [
          "Domestic Payments"
        ],
        "summary": "Initialize Payment",
        "description": "Initialize payment and send payment authorization request to `Customer`.",
        "operationId": "CreateDomesticPayments",
        "requestBody": {
          "description": "Default",
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/OBWriteDomestic2"
              },
              "examples": {
                "OBWriteDomestic2Example": {
                  "$ref": "#/components/examples/InitializePaymentExample"
                }
              }
            },
            "application/jose+jwe": {
              "schema": {
                "$ref": "#/components/schemas/OBWriteDomestic2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Domestic Payments Created",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/OBWriteDomesticResponse5"
                },
                "examples": {
                  "OBWriteDomesticResponse5Example": {
                    "$ref": "#/components/examples/InitializePaymentResponseExample"
                  }
                }
              },
              "application/jose+jwe": {
                "schema": {
                  "$ref": "#/components/schemas/OBWriteDomesticResponse5"
                },
                "examples": {
                  "OBWriteDomesticResponse5Example": {
                    "$ref": "#/components/examples/InitializePaymentResponseExample"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse1"
                }
              },
              "application/jose+jwe": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse1"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse1"
                }
              },
              "application/jose+jwe": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse1"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {}
          },
          "406": {
            "description": "Not Acceptable",
            "content": {}
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {}
          },
          "429": {
            "description": "Too Many Requests",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse1"
                }
              },
              "application/jose+jwe": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse1"
                }
              }
            }
          }
        },
        "security": [
          {
            "PSUOAuth2Security": [
              "payments"
            ]
          }
        ],
        "x-codegen-request-body-name": "OBWriteDomestic2Param"
      }
    },
    "/payments/{DomesticPaymentId}": {
      "get": {
        "tags": [
          "Domestic Payments"
        ],
        "summary": "Get Domestic Payment Details",
        "description": "Get domestic payment details for given payment Id.",
        "operationId": "getPaymentData",
        "parameters": [
          {
            "name": "DomesticPaymentId",
            "in": "path",
            "description": "UUID of Domestic Payments from `POST /payments` API",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Domestic Payments Retrived",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/OBWriteDomesticResponse5"
                },
                "examples": {
                  "OBWriteDomesticResponse5Example": {
                    "$ref": "#/components/examples/OBWriteDomesticResponse5Example"
                  }
                }
              },
              "application/jose+jwe": {
                "schema": {
                  "$ref": "#/components/schemas/OBWriteDomesticResponse5"
                },
                "examples": {
                  "OBWriteDomesticResponse5Example": {
                    "$ref": "#/components/examples/OBWriteDomesticResponse5Example"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse1"
                }
              },
              "application/jose+jwe": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse1"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse1"
                }
              },
              "application/jose+jwe": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse1"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {}
          },
          "406": {
            "description": "Not Acceptable",
            "content": {}
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {}
          },
          "429": {
            "description": "Too Many Requests",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse1"
                }
              },
              "application/jose+jwe": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse1"
                }
              }
            }
          }
        },
        "security": [
          {
            "PSUOAuth2Security": [
              "payments"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "OBWriteDomestic2": {
        "required": [
          "Data"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "required": [
              "Initiation"
            ],
            "type": "object",
            "properties": {
              "ConsentId": {
                "maxLength": 128,
                "minLength": 1,
                "type": "string",
                "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource."
              },
              "Initiation": {
                "type": "object",
                "properties": {
                  "InstructionIdentification": {
                    "maxLength": 36,
                    "minLength": 1,
                    "type": "string",
                    "description": "Unique identification as assigned by an instructing party for an instructed party to unambiguously identify the instruction.\nUsage: the instruction identification is a point to point reference that can be used between the instructing party and the instructed party to refer to the individual instruction. It can be included in several messages related to the instruction."
                  },
                  "EndToEndIdentification": {
                    "maxLength": 36,
                    "minLength": 1,
                    "type": "string",
                    "description": "Unique identification assigned by the initiating party to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain.\nUsage: The end-to-end identification can be used for reconciliation or to link tasks relating to the transaction. It can be included in several messages related to the transaction.\nOB: The Faster Payments Scheme can only access 31 characters for the EndToEndIdentification field."
                  },
                  "LocalInstrument": {
                    "$ref": "#/components/schemas/OBExternalLocalInstrument1Code"
                  },
                  "InstructedAmount": {
                    "required": [
                      "Amount",
                      "Currency"
                    ],
                    "type": "object",
                    "properties": {
                      "Amount": {
                        "$ref": "#/components/schemas/OBActiveCurrencyAndAmount_SimpleType"
                      },
                      "Currency": {
                        "$ref": "#/components/schemas/ActiveOrHistoricCurrencyCode"
                      }
                    },
                    "description": "Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party.\nUsage: This amount has to be transported unchanged through the transaction chain."
                  },
                  "DebtorAccountExt": {
                    "$ref": "#/components/schemas/DebtorAccountExt"
                  },
                  "DebtorAccount": {
                    "required": [
                      "Identification",
                      "SchemeName"
                    ],
                    "type": "object",
                    "properties": {
                      "SchemeName": {
                        "$ref": "#/components/schemas/OBExternalAccountIdentification4Code"
                      },
                      "Identification": {
                        "$ref": "#/components/schemas/Identification_0"
                      },
                      "Name": {
                        "maxLength": 350,
                        "minLength": 1,
                        "type": "string",
                        "description": "The account name is the name or names of the account owner(s) represented at an account level, as displayed by the ASPSP's online channels.\nNote, the account name is not the product name or the nickname of the account."
                      },
                      "SecondaryIdentification": {
                        "$ref": "#/components/schemas/SecondaryIdentification"
                      }
                    },
                    "description": "Unambiguous identification of the account of the debtor to which a debit entry will be made as a result of the transaction."
                  },
                  "CreditorAccount": {
                    "required": [
                      "Identification",
                      "Name",
                      "SchemeName"
                    ],
                    "type": "object",
                    "properties": {
                      "SchemeName": {
                        "$ref": "#/components/schemas/OBExternalAccountIdentification4Code"
                      },
                      "Identification": {
                        "$ref": "#/components/schemas/Identification_0"
                      },
                      "Name": {
                        "maxLength": 350,
                        "minLength": 1,
                        "type": "string",
                        "description": "The account name is the name or names of the account owner(s) represented at an account level.\nNote, the account name is not the product name or the nickname of the account.\nOB: ASPSPs may carry out name validation for Confirmation of Payee, but it is not mandatory."
                      },
                      "SecondaryIdentification": {
                        "$ref": "#/components/schemas/SecondaryIdentification"
                      }
                    },
                    "description": "Unambiguous identification of the account of the creditor to which a credit entry will be posted as a result of the payment transaction."
                  },
                  "CreditorAccountExt": {
                    "$ref": "#/components/schemas/CreditorAccountExt"
                  },
                  "CreditorPostalAddress": {
                    "$ref": "#/components/schemas/OBPostalAddress6"
                  },
                  "RemittanceInformation": {
                    "type": "object",
                    "properties": {
                      "Unstructured": {
                        "maxLength": 140,
                        "minLength": 1,
                        "type": "string",
                        "description": "Information supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts' receivable system, in an unstructured form."
                      },
                      "Reference": {
                        "maxLength": 35,
                        "minLength": 1,
                        "type": "string",
                        "description": "Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.\nUsage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.\nIf the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.\nOB: The Faster Payments Scheme can only accept 18 characters for the ReferenceInformation field - which is where this ISO field will be mapped."
                      }
                    },
                    "description": "Information supplied to enable the matching of an entry with the items that the transfer is intended to settle, such as commercial invoices in an accounts' receivable system."
                  },
                  "SupplementaryData": {
                    "$ref": "#/components/schemas/OBSupplementaryData1"
                  }
                },
                "description": "The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds from the debtor account to a creditor for a single domestic payment."
              }
            }
          },
          "Risk": {
            "$ref": "#/components/schemas/OBRisk1"
          }
        },
        "description": "The OBWriteDomestic2 object will be used for a call to:\n- POST /payments\n- PATCH /payments/{DomesticPaymentId}"
      },
      "OBWriteDomesticResponse5": {
        "required": [
          "Data"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/OBWriteDomesticResponse5Data"
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        }
      },
      "OBWriteDomesticResponse5Data": {
        "required": [
          "ConsentId",
          "CreationDateTime",
          "DomesticPaymentId",
          "Initiation",
          "Status",
          "StatusUpdateDateTime"
        ],
        "type": "object",
        "properties": {
          "DomesticPaymentId": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string",
            "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the domestic payment resource."
          },
          "ConsentId": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource."
          },
          "CreationDateTime": {
            "type": "string",
            "description": "Date and time at which the message was created.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
            "format": "date-time"
          },
          "Status": {
            "type": "string",
            "description": "Specifies the status of the payment information group. Error is Not an OB defined status.",
            "enum": [
              "AcceptedCreditSettlementCompleted",
              "AcceptedSettlementCompleted",
              "AcceptedSettlementInProcess",
              "AcceptedWithoutPosting",
              "Pending",
              "Cancelled",
              "Rejected",
              "Error",
              "Initialized",
              "Failed",
              "Completed",
              "Hold"
            ]
          },
          "StatusReason": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBStatusReason"
            }
          },
          "StatusUpdateDateTime": {
            "type": "string",
            "description": "Date and time at which the resource status was updated.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
            "format": "date-time"
          },
          "ExpectedExecutionDateTime": {
            "type": "string",
            "description": "Expected execution date and time for the payment resource.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
            "format": "date-time"
          },
          "ExpectedSettlementDateTime": {
            "type": "string",
            "description": "Expected settlement date and time for the payment resource.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
            "format": "date-time"
          },
          "Refund": {
            "required": [
              "Account"
            ],
            "type": "object",
            "properties": {
              "Account": {
                "required": [
                  "Identification",
                  "Name",
                  "SchemeName"
                ],
                "type": "object",
                "properties": {
                  "SchemeName": {
                    "$ref": "#/components/schemas/OBExternalAccountIdentification4Code"
                  },
                  "Identification": {
                    "$ref": "#/components/schemas/Identification_0"
                  },
                  "Name": {
                    "maxLength": 350,
                    "minLength": 1,
                    "type": "string",
                    "description": "Name of the account, as assigned by the account servicing institution.\nUsage: The account name is the name or names of the account owner(s) represented at an account level. The account name is not the product name or the nickname of the account.\nOB: ASPSPs may carry out name validation for Confirmation of Payee, but it is not mandatory."
                  },
                  "SecondaryIdentification": {
                    "$ref": "#/components/schemas/SecondaryIdentification"
                  }
                },
                "description": "Provides the details to identify an account."
              }
            },
            "description": "Unambiguous identification of the refund account to which a refund will be made as a result of the transaction."
          },
          "Charges": {
            "type": "array",
            "items": {
              "required": [
                "Amount",
                "ChargeBearer",
                "Type"
              ],
              "type": "object",
              "properties": {
                "ChargeBearer": {
                  "$ref": "#/components/schemas/OBChargeBearerType1Code"
                },
                "Type": {
                  "$ref": "#/components/schemas/OBExternalPaymentChargeType1Code"
                },
                "Amount": {
                  "$ref": "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount"
                }
              },
              "description": "Set of elements used to provide details of a charge for the payment initiation."
            }
          },
          "Initiation": {
            "type": "object",
            "properties": {
              "InstructionIdentification": {
                "maxLength": 36,
                "minLength": 1,
                "type": "string",
                "description": "Unique identification as assigned by an instructing party for an instructed party to unambiguously identify the instruction.\nUsage: the instruction identification is a point to point reference that can be used between the instructing party and the instructed party to refer to the individual instruction. It can be included in several messages related to the instruction."
              },
              "EndToEndIdentification": {
                "maxLength": 36,
                "minLength": 1,
                "type": "string",
                "description": "Unique identification assigned by the initiating party to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain.\nUsage: The end-to-end identification can be used for reconciliation or to link tasks relating to the transaction. It can be included in several messages related to the transaction.\nOB: The Faster Payments Scheme can only access 31 characters for the EndToEndIdentification field."
              },
              "LocalInstrument": {
                "$ref": "#/components/schemas/OBExternalLocalInstrument1Code"
              },
              "InstructedAmount": {
                "required": [
                  "Amount",
                  "Currency"
                ],
                "type": "object",
                "properties": {
                  "Amount": {
                    "$ref": "#/components/schemas/OBActiveCurrencyAndAmount_SimpleType"
                  },
                  "Currency": {
                    "$ref": "#/components/schemas/ActiveOrHistoricCurrencyCode"
                  }
                },
                "description": "Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party.\nUsage: This amount has to be transported unchanged through the transaction chain."
              },
              "DebtorAccount": {
                "required": [
                  "Identification",
                  "SchemeName"
                ],
                "type": "object",
                "properties": {
                  "SchemeName": {
                    "$ref": "#/components/schemas/OBExternalAccountIdentification4Code"
                  },
                  "Identification": {
                    "$ref": "#/components/schemas/Identification_0"
                  },
                  "Name": {
                    "maxLength": 350,
                    "minLength": 1,
                    "type": "string",
                    "description": "The account name is the name or names of the account owner(s) represented at an account level, as displayed by the ASPSP's online channels.\nNote, the account name is not the product name or the nickname of the account."
                  },
                  "SecondaryIdentification": {
                    "$ref": "#/components/schemas/SecondaryIdentification"
                  }
                },
                "description": "Unambiguous identification of the account of the debtor to which a debit entry will be made as a result of the transaction."
              },
              "CreditorAccount": {
                "required": [
                  "Identification",
                  "Name",
                  "SchemeName"
                ],
                "type": "object",
                "properties": {
                  "SchemeName": {
                    "$ref": "#/components/schemas/OBExternalAccountIdentification4Code"
                  },
                  "Identification": {
                    "$ref": "#/components/schemas/Identification_0"
                  },
                  "Name": {
                    "maxLength": 350,
                    "minLength": 1,
                    "type": "string",
                    "description": "The account name is the name or names of the account owner(s) represented at an account level.\nNote, the account name is not the product name or the nickname of the account.\nOB: ASPSPs may carry out name validation for Confirmation of Payee, but it is not mandatory."
                  },
                  "SecondaryIdentification": {
                    "$ref": "#/components/schemas/SecondaryIdentification"
                  }
                },
                "description": "Unambiguous identification of the account of the creditor to which a credit entry will be posted as a result of the payment transaction."
              },
              "CreditorPostalAddress": {
                "$ref": "#/components/schemas/OBPostalAddress6"
              },
              "RemittanceInformation": {
                "type": "object",
                "properties": {
                  "Unstructured": {
                    "maxLength": 140,
                    "minLength": 1,
                    "type": "string",
                    "description": "Information supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts' receivable system, in an unstructured form."
                  },
                  "Reference": {
                    "maxLength": 35,
                    "minLength": 1,
                    "type": "string",
                    "description": "Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.\nUsage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.\nIf the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.\nOB: The Faster Payments Scheme can only accept 18 characters for the ReferenceInformation field - which is where this ISO field will be mapped."
                  }
                },
                "description": "Information supplied to enable the matching of an entry with the items that the transfer is intended to settle, such as commercial invoices in an accounts' receivable system."
              },
              "SupplementaryData": {
                "$ref": "#/components/schemas/OBSupplementaryData1"
              }
            },
            "description": "The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds from the debtor account to a creditor for a single domestic payment."
          },
          "Debtor": {
            "$ref": "#/components/schemas/OBCashAccountDebtor4"
          },
          "MultiAuthorisation": {
            "required": [
              "Status"
            ],
            "type": "object",
            "properties": {
              "Status": {
                "type": "string",
                "description": "Specifies the status of the authorisation flow in code"
              }
            },
            "description": "The multiple authorisation flow response from the ASPSP."
          }
        },
        "additionalProperties": false,
        "description": "The OBWriteDomesticResponse5Data object will be used for a responses to a call to POST /payments, GET /payments/{DomesticPaymentId}"
      },
      "OBErrorResponse1": {
        "required": [
          "Code",
          "Errors",
          "Message"
        ],
        "type": "object",
        "properties": {
          "Code": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string",
            "description": "High level textual error code, to help categorize the errors."
          },
          "Id": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string",
            "description": "A unique reference for the error instance, for audit purposes, in case of unknown/unclassified errors."
          },
          "Message": {
            "maxLength": 500,
            "minLength": 1,
            "type": "string",
            "description": "Brief Error message, e.g., 'There is something wrong with the request parameters provided'"
          },
          "Errors": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBError1"
            }
          }
        },
        "description": "An array of detail error codes, and messages, and URLs to documentation to help remediation."
      },
      "OBError1": {
        "required": [
          "ErrorCode",
          "Message"
        ],
        "type": "object",
        "properties": {
          "ErrorCode": {
            "type": "string",
            "description": "Low level textual error code, e.g., UK.OBIE.Field.Missing",
            "x-namespaced-enum": [
              "UK.OBIE.Field.Expected",
              "UK.OBIE.Field.Invalid",
              "UK.OBIE.Field.InvalidDate",
              "UK.OBIE.Field.Missing",
              "UK.OBIE.Field.Unexpected",
              "UK.OBIE.Header.Invalid",
              "UK.OBIE.Header.Missing",
              "UK.OBIE.Reauthenticate",
              "UK.OBIE.Resource.ConsentMismatch",
              "UK.OBIE.Resource.InvalidConsentStatus",
              "UK.OBIE.Resource.InvalidFormat",
              "UK.OBIE.Resource.NotFound",
              "UK.OBIE.Rules.AfterCutOffDateTime",
              "UK.OBIE.Rules.DuplicateReference",
              "UK.OBIE.Signature.Invalid",
              "UK.OBIE.Signature.InvalidClaim",
              "UK.OBIE.Signature.Malformed",
              "UK.OBIE.Signature.Missing",
              "UK.OBIE.Signature.MissingClaim",
              "UK.OBIE.Signature.Unexpected",
              "UK.OBIE.UnexpectedError",
              "UK.OBIE.Unsupported.AccountIdentifier",
              "UK.OBIE.Unsupported.AccountSecondaryIdentifier",
              "UK.OBIE.Unsupported.Currency",
              "UK.OBIE.Unsupported.Frequency",
              "UK.OBIE.Unsupported.LocalInstrument",
              "UK.OBIE.Unsupported.Scheme"
            ]
          },
          "Message": {
            "maxLength": 500,
            "minLength": 1,
            "type": "string",
            "description": "A description of the error that occurred. e.g., 'A mandatory field isn't supplied' or 'RequestedExecutionDateTime must be in future'\\nOBIE doesn't standardise this field"
          },
          "Path": {
            "maxLength": 500,
            "minLength": 1,
            "type": "string",
            "description": "Recommended but not mandatory. A path to help developers identify the field which caused the error."
          },
          "Url": {
            "type": "string",
            "description": "URL to help remediate the problem, or provide more information, or to API Reference, or help etc"
          }
        },
        "description": "OBError1"
      },
      "DebtorAccountExt": {
        "type": "object",
        "properties": {
          "BankCode": {
            "type": "string"
          },
          "BankDomainCode": {
            "type": "string",
            "description": "The bank domain code.",
            "example": "Striker",
            "maxLength": 100,
            "x-constraints": "@IDString"
          },
          "NameOnTheCard": {
            "type": "string",
            "example": "Andrea Smith"
          },
          "EncryptedCardNumber": {
            "type": "string",
            "example": "41111111********"
          },
          "EncryptedExpiryMonth": {
            "type": "string",
            "example": "**"
          },
          "EncryptedExpiryYear": {
            "type": "string",
            "example": "****"
          },
          "EncryptedSecurityCode": {
            "type": "string",
            "example": "**"
          }
        }
      },
      "CreditorAccountExt": {
        "type": "object",
        "properties": {
          "MerchantAccountKey": {
            "type": "string",
            "description": "Merchant ID"
          },
          "BankCode": {
            "type": "string"
          },
          "BranchCode": {
            "type": "string"
          },
          "QrCode": {
            "type": "string"
          },
          "QrDetails": {
            "type": "object"
          },
          "HashPAN": {
            "type": "string"
          }
        }
      },
      "OBSupplementaryData1": {
        "type": "object",
        "properties": {
          "CustomFields": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "Key": {
                  "type": "string"
                },
                "Value": {
                  "type": "string"
                }
              }
            }
          },
          "PaymentServiceProviderExt": {
            "type": "object",
            "properties": {
              "PspName": {
                "type": "string"
              }
            }
          }
        },
        "description": "Additional information is provided in the form of a key-value list within CustomFields, which includes keys such as ['ReSendOTP', 'ValidateOTP', 'isApprovalFlow', 'OriginalTransactionId', 'AdjustmentType', 'TransactionChannel', 'customerCIF', 'OTP', 'OtpToken', etc.]"
      },
      "OBRisk1": {
        "type": "object",
        "properties": {
          "PaymentContextCode": {
            "type": "string",
            "description": "Specifies the payment context",
            "enum": [
              "BillPayment",
              "EcommerceGoods",
              "EcommerceServices",
              "Other",
              "PartyToParty"
            ]
          },
          "MerchantCategoryCode": {
            "maxLength": 4,
            "minLength": 3,
            "type": "string"
          },
          "MerchantCustomerIdentification": {
            "maxLength": 70,
            "minLength": 1,
            "type": "string",
            "description": "The unique customer identifier of the PSU with the merchant."
          },
          "DeliveryAddress": {
            "required": [
              "Country",
              "TownName"
            ],
            "type": "object",
            "properties": {
              "AddressLine": {
                "maxItems": 2,
                "minItems": 0,
                "type": "array",
                "items": {
                  "maxLength": 70,
                  "minLength": 1,
                  "type": "string",
                  "description": "Information that locates and identifies a specific address, as defined by postal services, that is presented in free format text."
                }
              },
              "StreetName": {
                "maxLength": 70,
                "minLength": 1,
                "type": "string",
                "description": "Name of a street or thoroughfare."
              },
              "BuildingNumber": {
                "maxLength": 16,
                "minLength": 1,
                "type": "string",
                "description": "Number that identifies the position of a building on a street."
              },
              "PostCode": {
                "maxLength": 16,
                "minLength": 1,
                "type": "string",
                "description": "Identifier consisting of a group of letters and/or numbers that is added to a postal address to assist the sorting of mail."
              },
              "TownName": {
                "maxLength": 35,
                "minLength": 1,
                "type": "string",
                "description": "Name of a built-up area, with defined boundaries, and a local government."
              },
              "CountrySubDivision": {
                "maxLength": 2,
                "minLength": 1,
                "type": "array",
                "items": {
                  "maxLength": 35,
                  "minLength": 1,
                  "type": "string",
                  "description": "Identifies a subdivision of a country, for instance state, region, county."
                }
              },
              "Country": {
                "pattern": "^[A-Z]{2,2}$",
                "type": "string",
                "description": "Nation with its own government, occupying a particular territory."
              }
            }
          }
        }
      },
      "OBActiveCurrencyAndAmount_SimpleType": {
        "pattern": "^\\d{1,13}$|^\\d{1,13}\\.\\d{1,5}$",
        "type": "string",
        "description": "A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217."
      },
      "ActiveOrHistoricCurrencyCode": {
        "pattern": "^[A-Z]{3,3}$",
        "type": "string",
        "description": "A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\"."
      },
      "OBExternalLocalInstrument1Code": {
        "type": "string",
        "description": "User community specific instrument.\nUsage: This element is used to specify a local instrument, local clearing option and/or further qualify the service or service level.",
        "x-namespaced-enum": [
          "UK.OBIE.BACS",
          "UK.OBIE.BalanceTransfer",
          "UK.OBIE.CHAPS",
          "UK.OBIE.Euro1",
          "UK.OBIE.FPS",
          "UK.OBIE.Link",
          "UK.OBIE.MoneyTransfer",
          "UK.OBIE.Paym",
          "UK.OBIE.SEPACreditTransfer",
          "UK.OBIE.SEPAInstantCreditTransfer",
          "UK.OBIE.Swift",
          "UK.OBIE.Target2"
        ]
      },
      "OBExternalAccountIdentification4Code": {
        "type": "string",
        "description": "Name of the identification scheme, in a coded form as published in an external list.",
        "x-namespaced-enum": [
          "UK.OBIE.BBAN",
          "UK.OBIE.IBAN",
          "UK.OBIE.PAN",
          "UK.OBIE.Paym",
          "UK.OBIE.SortCodeAccountNumber",
          "OBIE.AccountNumber",
          "OBIE.MobileNumber"
        ]
      },
      "Identification_0": {
        "maxLength": 256,
        "minLength": 1,
        "type": "string",
        "description": "Identification assigned by an institution to identify an account. This identification is known by the account owner."
      },
      "SecondaryIdentification": {
        "maxLength": 34,
        "minLength": 1,
        "type": "string",
        "description": "This is secondary identification of the account, as assigned by the account servicing institution.\\nThis can be used by building societies to additionally identify accounts with a roll number (in addition to a sort code and account number combination)."
      },
      "OBPostalAddress6": {
        "type": "object",
        "properties": {
          "AddressType": {
            "$ref": "#/components/schemas/OBAddressTypeCode"
          },
          "Department": {
            "maxLength": 70,
            "minLength": 1,
            "type": "string",
            "description": "Identification of a division of a large organisation or building."
          },
          "SubDepartment": {
            "maxLength": 70,
            "minLength": 1,
            "type": "string",
            "description": "Identification of a sub-division of a large organisation or building."
          },
          "StreetName": {
            "maxLength": 70,
            "minLength": 1,
            "type": "string",
            "description": "Name of a street or thoroughfare."
          },
          "BuildingNumber": {
            "maxLength": 16,
            "minLength": 1,
            "type": "string",
            "description": "Number that identifies the position of a building on a street."
          },
          "PostCode": {
            "maxLength": 16,
            "minLength": 1,
            "type": "string",
            "description": "Identifier consisting of a group of letters and/or numbers that is added to a postal address to assist the sorting of mail."
          },
          "TownName": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "Name of a built-up area, with defined boundaries, and a local government."
          },
          "CountrySubDivision": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "Identifies a subdivision of a country such as state, region, county."
          },
          "Country": {
            "pattern": "^[A-Z]{2,2}$",
            "type": "string",
            "description": "Nation with its own government."
          },
          "AddressLine": {
            "maxItems": 7,
            "minItems": 0,
            "type": "array",
            "items": {
              "maxLength": 70,
              "minLength": 1,
              "type": "string",
              "description": "Information that locates and identifies a specific address, as defined by postal services, presented in free format text."
            }
          }
        }
      },
      "OBAddressTypeCode": {
        "type": "string",
        "description": "Identifies the nature of the postal address.",
        "enum": [
          "Business",
          "Correspondence",
          "DeliveryTo",
          "MailTo",
          "POBox",
          "Postal",
          "Residential",
          "Statement"
        ]
      },
      "OBStatusReason": {
        "required": [
          "StatusReasonCode",
          "StatusReasonDescription"
        ],
        "type": "object",
        "properties": {
          "StatusReasonCode": {
            "maxLength": 4,
            "minLength": 1,
            "type": "string",
            "description": "Specifies the status reason in a code form. For a full description see `OBExternalStatusReason1Code` in `OB_Internal_CodeSet` [here](https://github.com/OpenBankingUK/External_Internal_CodeSets)"
          },
          "StatusReasonDescription": {
            "maxLength": 500,
            "minLength": 1,
            "type": "string",
            "description": "Description supporting the StatusReasonCode."
          },
          "Path": {
            "maxLength": 500,
            "minLength": 1,
            "type": "string",
            "description": "Recommended but not mandatory. A path to help identify the object/field that the additional StatusReason refers to. This is only populated if the status is 'Rejected'"
          }
        }
      },
      "OBChargeBearerType1Code": {
        "type": "string",
        "description": "Specifies which party/parties will bear the charges associated with the processing of the payment transaction.",
        "enum": [
          "BorneByCreditor",
          "BorneByDebtor",
          "FollowingServiceLevel",
          "Shared"
        ]
      },
      "OBExternalPaymentChargeType1Code": {
        "type": "string",
        "description": "Charge type, in a coded form.",
        "x-namespaced-enum": [
          "UK.OBIE.CHAPSOut",
          "UK.OBIE.BalanceTransferOut",
          "UK.OBIE.MoneyTransferOut"
        ]
      },
      "OBActiveOrHistoricCurrencyAndAmount": {
        "required": [
          "Amount",
          "Currency"
        ],
        "type": "object",
        "properties": {
          "Amount": {
            "$ref": "#/components/schemas/OBActiveCurrencyAndAmount_SimpleType"
          },
          "Currency": {
            "$ref": "#/components/schemas/ActiveOrHistoricCurrencyCode"
          }
        },
        "description": "Amount of money associated with the charge type."
      },
      "OBCashAccountDebtor4": {
        "type": "object",
        "properties": {
          "SchemeName": {
            "$ref": "#/components/schemas/OBExternalAccountIdentification4Code"
          },
          "Identification": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Identification assigned by an institution to identify an account. This identification is known by the account owner."
          },
          "Name": {
            "maxLength": 350,
            "minLength": 1,
            "type": "string",
            "description": "Name of the account, as assigned by the account servicing institution.\\nUsage The account name is the name or names of the account owner(s) represented at an account level. The account name is not the product name or the nickname of the account."
          },
          "SecondaryIdentification": {
            "maxLength": 34,
            "minLength": 1,
            "type": "string",
            "description": "This is secondary identification of the account, as assigned by the account servicing institution.\\nThis can be used by building societies to additionally identify accounts with a roll number\\n(in addition to a sort code and account number combination)"
          }
        },
        "description": "Set of elements used to identify a person or an organisation."
      },
      "Links": {
        "required": [
          "Self"
        ],
        "type": "object",
        "properties": {
          "Self": {
            "type": "string",
            "format": "uri"
          },
          "First": {
            "type": "string",
            "format": "uri"
          },
          "Prev": {
            "type": "string",
            "format": "uri"
          },
          "Next": {
            "type": "string",
            "format": "uri"
          },
          "Last": {
            "type": "string",
            "format": "uri"
          }
        },
        "description": "Links relevant to the payload"
      },
      "Meta": {
        "type": "object",
        "properties": {
          "TotalPages": {
            "type": "integer",
            "format": "int32"
          },
          "FirstAvailableDateTime": {
            "type": "string",
            "description": "All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
            "format": "date-time"
          },
          "LastAvailableDateTime": {
            "type": "string",
            "description": "All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2017-04-05T10:43:07+00:00",
            "format": "date-time"
          }
        },
        "description": "Meta Data relevant to the payload"
      }
    },
    "examples": {
      "InitializePaymentExample": {
        "value": {
          "Data": {
            "Initiation": {
              "LocalInstrument": "Purchase",
              "InstructedAmount": {
                "Amount": "100",
                "Currency": "ZAR"
              },
              "DebtorAccount": {
                "SchemeName": "OBIE.AccountNumber",
                "Identification": "10013895020",
                "Name": "Test User01"
              },
              "DebtorAccountExt": {
                "BankCode": "IVESZAJ0"
              },
              "CreditorAccountExt": {
                "MerchantAccountKey": "150d30ca-fab3-4b53-b3aa-1bbd35c8d732"
              },
              "RemittanceInformation": {
                "Unstructured": "X123"
              },
              "SupplementaryData": {
                "CustomFields": [
                  {
                    "Key": "ExpireAt",
                    "Value": "1753870584"
                  }
                ]
              }
            }
          },
          "Risk": {
            "PaymentContextCode": "EcommerceGoods"
          }
        },
        "summary": "Payment with AccountNumber"
      },
      "InitializePaymentExampleMobile": {
        "value": {
          "Data": {
            "Initiation": {
              "LocalInstrument": "Purchase",
              "InstructedAmount": {
                "Amount": "100",
                "Currency": "ZAR"
              },
              "DebtorAccount": {
                "SchemeName": "OBIE.MobileNumber",
                "Identification": "0812345678",
                "Name": "Nkosi Zulu"
              },
              "DebtorAccountExt": {
                "BankCode": "IVESZAJ0",
                "BankDomainCode": "Striker"
              },
              "CreditorAccountExt": {
                "MerchantAccountKey": "150d30ca-fab3-4b53-b3aa-1bbd35c8d732"
              },
              "RemittanceInformation": {
                "Unstructured": "X123"
              },
              "SupplementaryData": {
                "CustomFields": [
                  {
                    "Key": "ExpireAt",
                    "Value": "1753870584"
                  }
                ]
              }
            }
          },
          "Risk": {
            "PaymentContextCode": "EcommerceGoods"
          }
        },
        "summary": "Payment with MobileNumber"
      },
      "InitializePaymentResponseExample": {
        "value": {
          "Data": {
            "DomesticPaymentId": "b40b367a-4ad2-4507-a4f9-7ae97b6228a3",
            "CreationDateTime": "2023-10-23T10:43:07+08:00",
            "StatusUpdateDateTime": "2023-10-23T10:43:07+08:00",
            "Status": "Initialized",
            "Initiation": {
              "InstructionIdentification": "b40b367a-4ad2-4507-a4f9-7ae97b6228a3",
              "EndToEndIdentification": "52d03e4b-3bd4-49f3-a489-c8a3fece88af",
              "LocalInstrument": "Purchase",
              "InstructedAmount": {
                "Amount": "100",
                "Currency": "ZAR"
              },
              "DebtorAccount": {
                "SchemeName": "OBIE.AccountNumber",
                "Identification": "10013895020",
                "Name": "Test User01"
              },
              "RemittanceInformation": {
                "Unstructured": "X123",
                "Reference": "48d3941e-2734-48b6-a26e-e49320be336e-001"
              },
              "SupplementaryData": {
                "CustomFields": [
                  {
                    "Key": "ExpireAt",
                    "Value": "1753870584"
                  },
                  {
                    "Key": "DebtorAccountNumber",
                    "Value": "10013895020"
                  },
                  {
                    "Key": "DebtorAccountOpenDate",
                    "Value": "2023-10-10T10:43:07+08:00"
                  },
                  {
                    "Key": "DebtorId",
                    "Value": "b0897348-d72b-4ce5-ae05-670f45c58e1a"
                  },
                  {
                    "Key": "DebtorAccountStatus",
                    "Value": "ACTIVE"
                  },
                  {
                    "Key": "DebtorAccountType",
                    "Value": "DEPOSIT_WALLET"
                  },
                  {
                    "Key": "DebtorAvailableBalance",
                    "Value": "124955.000000000000000000"
                  },
                  {
                    "Key": "DebtorCurrentBalance",
                    "Value": "124955.000000000000000000"
                  },
                  {
                    "Key": "DebtorCustomerNo",
                    "Value": "8a8e873888ae74540188b3840dac3f17"
                  },
                  {
                    "Key": "CreditorMerchantKey",
                    "Value": "150d30ca-fab3-4b53-b3aa-1bbd35c8d732"
                  }
                ],
                "PaymentServiceProviderExt": {
                  "PspName": "Emulator"
                }
              }
            },
            "Debtor": {
              "Name": "Test User01"
            }
          }
        }
      },
      "OBWriteDomesticResponse5Example": {
        "value": {
          "Data": {
            "DomesticPaymentId": "b40b367a-4ad2-4507-a4f9-7ae97b6228a3",
            "CreationDateTime": "2023-10-23T10:43:07+08:00",
            "StatusUpdateDateTime": "2023-10-23T10:43:07+08:00",
            "Status": "AcceptedSettlementInProcess",
            "Initiation": {
              "InstructionIdentification": "b40b367a-4ad2-4507-a4f9-7ae97b6228a3",
              "EndToEndIdentification": "52d03e4b-3bd4-49f3-a489-c8a3fece88af",
              "LocalInstrument": "Purchase",
              "InstructedAmount": {
                "Amount": "100",
                "Currency": "ZAR"
              },
              "DebtorAccount": {
                "SchemeName": "OBIE.AccountNumber",
                "Identification": "10013895020",
                "Name": "Test User01"
              },
              "RemittanceInformation": {
                "Unstructured": "X123",
                "Reference": "48d3941e-2734-48b6-a26e-e49320be336e-001"
              },
              "SupplementaryData": {
                "CustomFields": [
                  {
                    "Key": "ExpireAt",
                    "Value": "1753870584"
                  },
                  {
                    "Key": "DebtorAccountNumber",
                    "Value": "10013895020"
                  },
                  {
                    "Key": "DebtorAccountOpenDate",
                    "Value": "2023-10-10T10:43:07+08:00"
                  },
                  {
                    "Key": "DebtorId",
                    "Value": "b0897348-d72b-4ce5-ae05-670f45c58e1a"
                  },
                  {
                    "Key": "DebtorAccountStatus",
                    "Value": "ACTIVE"
                  },
                  {
                    "Key": "DebtorAccountType",
                    "Value": "DEPOSIT_WALLET"
                  },
                  {
                    "Key": "DebtorAvailableBalance",
                    "Value": "124955.000000000000000000"
                  },
                  {
                    "Key": "DebtorCurrentBalance",
                    "Value": "124955.000000000000000000"
                  },
                  {
                    "Key": "DebtorCustomerNo",
                    "Value": "8a8e873888ae74540188b3840dac3f17"
                  },
                  {
                    "Key": "CreditorMerchantKey",
                    "Value": "150d30ca-fab3-4b53-b3aa-1bbd35c8d732"
                  }
                ],
                "PaymentServiceProviderExt": {
                  "PspName": "Emulator"
                }
              }
            },
            "Debtor": {
              "Name": "Test User01"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "PSUOAuth2Security": {
        "type": "oauth2",
        "description": "OAuth flow, it is required when the PSU needs to perform SCA with the ASPSP when a TPP wants to access an ASPSP resource owned by the PSU",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://authserver.example/authorization",
            "tokenUrl": "https://authserver.example/token",
            "scopes": {
              "payments": "Generic payment scope"
            }
          }
        }
      }
    }
  }
}